# This file exists so you can easily regenerate your project.
#
# `cookiepatcher` is a convenient shim around `cookiecutter`
# for regenerating projects (it will generate a .cookiecutterrc
# automatically for any template). To use it:
#
#    pip install cookiepatcher
#    cookiepatcher gh:ionelmc/cookiecutter-pylibrary project-path
#
# See:
#    https://pypi.org/project/cookiepatcher
#
# Alternatively, you can run:
#
#    cookiecutter --overwrite-if-exists --config-file=project-path/.cookiecutterrc gh:ionelmc/cookiecutter-pylibrary

default_context:

    _template:                 'cookiecutter-pylibrary'
    allow_tests_inside_package: 'yes'
    appveyor:                  'no'
    codeclimate:               'no'
    codecov:                   'no'
    command_line_interface:    'click'
    coveralls:                 'no'
    email:                     'David.A.Hannasch@gmail.com'
    full_name:                 'David A. Hannasch'
    landscape:                 'no'
    license:                   'no'
    linter:                    'flake8'
    pre_commit:                'yes'
    pypi_badge:                'no'
    pypi_disable_upload:       'no'
    repo_hosting:              'other domain not listed'
    requiresio:                'no'
    scrutinizer:               'no'
    setup_py_uses_setuptools_scm: 'yes'
    sphinx_docs:               'yes'
    sphinx_docs_hosting:       'https://www.google.com'
    travis:                    'no'
    travis_osx:                'no'
    website:                   'https://www.google.com'
