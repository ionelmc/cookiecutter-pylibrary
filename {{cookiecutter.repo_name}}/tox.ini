{%- if cookiecutter.test_matrix_configurator|lower == "yes" -%}
; this is just a bootstrap tox configuration, run tox or ./ci/bootstrap.py to have the full tox.ini

[tox]
envlist = bootstrap

[testenv:bootstrap]
deps =
    jinja2
    matrix
usedevelop = true
commands =
    python ci/bootstrap.py

{%- else -%}
; a generative tox configuration, see: https://testrun.org/tox/latest/config.html#generative-envlist

[tox]
envlist =
    clean,
    check,
    {2.6,2.7,3.3,3.4,pypy},
    {2.6,2.7,3.3,3.4,pypy}-nocover,
    report,
    docs

[testenv]
basepython =
    pypy: pypy
    2.6: python2.6
    {2.7,docs}: python2.7
    3.3: python3.3
    3.4: python3.4
    {clean,check,report,extension-coveralls,coveralls}: python3.4
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
deps =
    pytest
    pytest-capturelog
    pytest-cov
commands =
{%- if cookiecutter.c_extension_support|lower == "yes" %}
    python setup.py clean --all build_ext --force --inplace
{%- endif %}
{%- if cookiecutter.test_runner|lower == "pytest" %}
    {posargs:py.test --cov=src --cov-report=term-missing -vv}
{%- else %}
    {posargs:nosetests --with-coverage --cover-package={{ cookiecutter.package_name }}}
{%- endif %}
usedevelop = true

[testenv:spell]
setenv =
    SPELLCHECK=1
commands =
    sphinx-build -b spelling docs dist/docs
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:docs]
whitelist_externals =
    rm
commands =
    rm -rf dist/docs || rmdir /S /Q dist\docs
    sphinx-build -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt

[testenv:check]
basepython = python3.4
deps =
    docutils
    check-manifest
    flake8
    readme
    pygments
usedevelop = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    flake8 src

[testenv:coveralls]
deps =
    coveralls
usedevelop = true
commands =
    coverage combine
    coverage report
    coveralls
{% if cookiecutter.c_extension_support|lower == "yes" %}
[testenv:extension-coveralls]
deps =
    cpp-coveralls
usedevelop = true
commands =
    coveralls --build-root=. --include=src --dump=extension-coveralls.json
{% endif -%}
[testenv:report]
basepython = python3.4
commands =
    coverage combine
    coverage report
usedevelop = true
deps = coverage

[testenv:clean]
commands = coverage erase
usedevelop = true
deps = coverage

[testenv:2.6-nocover]
commands =
{%- if cookiecutter.c_extension_support|lower == "yes" %}
    python setup.py clean --all build_ext --force
{%- endif %}
{%- if cookiecutter.test_runner|lower == "pytest" %}
    {posargs:py.test -vv --ignore=src}
{%- else %}
    {posargs:nosetests -v tests}
{%- endif %}
usedevelop = false

[testenv:2.7-nocover]
commands =
{%- if cookiecutter.c_extension_support|lower == "yes" %}
    python setup.py clean --all build_ext --force
{%- endif %}
{%- if cookiecutter.test_runner|lower == "pytest" %}
    {posargs:py.test -vv --ignore=src}
{%- else %}
    {posargs:nosetests -v tests}
{%- endif %}
usedevelop = false

[testenv:3.3-nocover]
commands =
{%- if cookiecutter.c_extension_support|lower == "yes" %}
    python setup.py clean --all build_ext --force
{%- endif %}
{%- if cookiecutter.test_runner|lower == "pytest" %}
    {posargs:py.test -vv --ignore=src}
{%- else %}
    {posargs:nosetests -v tests}
{%- endif %}
usedevelop = false

[testenv:3.4-nocover]
commands =
{%- if cookiecutter.c_extension_support|lower == "yes" %}
    python setup.py clean --all build_ext --force
{%- endif %}
{%- if cookiecutter.test_runner|lower == "pytest" %}
    {posargs:py.test -vv --ignore=src}
{%- else %}
    {posargs:nosetests -v tests}
{%- endif %}
usedevelop = false

[testenv:pypy-nocover]
commands =
{%- if cookiecutter.c_extension_support|lower == "yes" %}
    python setup.py clean --all build_ext --force
{%- endif %}
{%- if cookiecutter.test_runner|lower == "pytest" %}
    {posargs:py.test -vv --ignore=src}
{%- else %}
    {posargs:nosetests -v tests}
{%- endif %}
usedevelop = false
{% endif %}
