[testenv:bootstrap]
deps =
    jinja2
    tox
skip_install = true
commands =
    python ci/bootstrap.py --no-env
passenv =
    *

; a generative tox configuration, see: https://tox.wiki/en/latest/user_guide.html#generative-environments
[tox]
envlist =
    clean,
    check,
{%- if cookiecutter.sphinx_docs == "yes" %}
    docs,
{%- endif %}
    {py39,py310,py311,py312,py313,py314{% if cookiecutter.c_extension_support != 'no' %},py313t,py314t{% endif %},pypy39,pypy310,pypy311}
{%- if cookiecutter.test_matrix_separate_coverage == 'yes' %}-{cover,nocov}{% endif %},
    report
ignore_basepython_conflict = true

[testenv]
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
{%- if cookiecutter.c_extension_support in ['yes', 'cython'] %}
    cover: SETUPPY_EXT_COVERAGE=yes
{%- endif %}
passenv =
    *
{%- if cookiecutter.c_extension_support == 'no' %}
package = wheel
{%- else %}
package = sdist
{%- endif %}
{%- if cookiecutter.test_matrix_separate_coverage == 'yes' %}
usedevelop =
    cover: true
    nocov: false
{%- else %}
usedevelop = false
{%- endif %}
dependency_groups =
    test
deps =
    {% if cookiecutter.test_matrix_separate_coverage == 'yes' %}cover: {% endif %}pytest-cov
    setuptools>=80
{%- if cookiecutter.setup_py_uses_setuptools_scm == 'yes' %}
    setuptools_scm>=8
{%- endif %}
commands =
{%- if cookiecutter.c_extension_support != 'no' %}
    {%- if cookiecutter.test_matrix_separate_coverage == 'yes' %}
    cover: python setup.py clean --all build_ext --force --inplace
    {%- endif %}
{%- endif %}
    {%- if cookiecutter.test_matrix_separate_coverage == 'yes' %}
    nocov: {posargs:pytest -vv --ignore=src}
    cover: {posargs:pytest --cov --cov-report=term-missing --cov-report=xml -vv}
    {%- else %}
    {posargs:pytest --cov --cov-report=term-missing --cov-report=xml -vv {% if cookiecutter.tests_inside_package == "no" %}tests{% endif %}}
    {%- endif %}

[testenv:check]
deps =
    docutils
{%- if cookiecutter.setup_py_uses_setuptools_scm == 'no' %}
    check-manifest
{%- endif %}
    pre-commit
    readme-renderer
    pygments
    twine
    uv
{%- if cookiecutter.setup_py_uses_setuptools_scm == 'yes' %}
    setuptools_scm>=8
{%- endif %}
skip_install = true
commands =
    uv build --sdist --out-dir build
    twine check build
{%- if cookiecutter.setup_py_uses_setuptools_scm == 'no' %}
    check-manifest .
{%- endif %}
    pre-commit run --all-files --show-diff-on-failure
{%- if cookiecutter.c_extension_support == 'cython' %}

[testenv:cythonize]
pip_pre = true
deps =
    setuptools>=80
{%- if cookiecutter.setup_py_uses_setuptools_scm == 'yes' %}
    setuptools_scm>=8
{%- endif %}
    cython
skip_install = true
commands =
    {posargs:python setup.py clean --all build_ext --force}
{%- endif %}
{%- if cookiecutter.sphinx_docs == "yes" %}

[testenv:docs]
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
{%- if cookiecutter.sphinx_doctest == "yes" %}
    sphinx-build {posargs:-E} -b doctest docs dist/docs
{%- endif %}
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs
{%- endif %}

[testenv:report]
deps =
    coverage
{%- if cookiecutter.c_extension_support == 'cython' %}
    cython
{%- endif %}
skip_install = true
setenv =
    PYTHONPATH={toxinidir}/src
commands =
    coverage report
    coverage html

[testenv:clean]
commands =
    python setup.py clean
    coverage erase
skip_install = true
deps =
    setuptools>=80
{%- if cookiecutter.setup_py_uses_setuptools_scm == 'yes' %}
    setuptools_scm>=8
{%- endif %}
    coverage
{%- if cookiecutter.c_extension_support == 'cython' %}
    cython
{%- endif %}
