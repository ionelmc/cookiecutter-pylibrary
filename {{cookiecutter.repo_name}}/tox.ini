[testenv:bootstrap]
deps =
    jinja2
{%- if cookiecutter.test_matrix_configurator == "yes" %}
    matrix
{%- endif %}
    tox
skip_install = true
commands =
    python ci/bootstrap.py --no-env
passenv =
    *
{% if cookiecutter.test_matrix_configurator == "yes" %}
basepython =
    python
{% endif %}

{%- if cookiecutter.test_matrix_configurator == "yes" -%}
; this is just a bootstrap tox configuration, run tox or ./ci/bootstrap.py to have the full tox.ini

[tox]
envlist = bootstrap

{%- else -%}
; a generative tox configuration, see: https://tox.readthedocs.io/en/latest/config.html#generative-envlist

[tox]
envlist =
    {% if cookiecutter.test_runner == "pytest" %}clean,{% endif %}
    check,
{%- if cookiecutter.sphinx_docs == "yes" %}
    docs,
{%- endif %}
{%- if cookiecutter.legacy_python == "yes" %}
    {py27,py36,py37,py38,py39,py310,pypy,pypy37,pypy38}
{%- else %}
    {py36,py37,py38,py39,py310,pypy37,pypy38}
{%- endif -%}
{%- if cookiecutter.test_matrix_separate_coverage == 'yes' %}-{cover,nocov}{% endif %},
    report
ignore_basepython_conflict = true

[testenv]
{%- if cookiecutter.c_extension_test_pypi == 'yes' %}
wheel = true
{%- endif %}
basepython =
{%- if cookiecutter.legacy_python == "yes" %}
    pypy: {env:TOXPYTHON:pypy}
{%- endif %}
    pypy37: {env:TOXPYTHON:pypy3.7}
    pypy38: {env:TOXPYTHON:pypy3.8}
{%- if cookiecutter.legacy_python == "yes" %}
    py27: {env:TOXPYTHON:python2.7}
{%- endif %}
    py36: {env:TOXPYTHON:python3.6}
    py37: {env:TOXPYTHON:python3.7}
    py38: {env:TOXPYTHON:python3.8}
    py39: {env:TOXPYTHON:python3.9}
    py310: {env:TOXPYTHON:python3.10}
    {bootstrap,clean,check,report
        {%- if cookiecutter.sphinx_docs == "yes" -%}
            ,docs
        {%- endif -%}
        {%- if cookiecutter.codecov == 'yes' -%}
            ,codecov
        {%- endif -%}
        {%- if cookiecutter.coveralls == 'yes' -%}
            ,coveralls
            {%- if cookiecutter.c_extension_support != "no" -%}
                ,extension-coveralls
            {%- endif -%}
        {%- endif -%}
    }: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
{%- if cookiecutter.c_extension_support in ['yes', 'cython'] %}
    cover: SETUPPY_EXT_COVERAGE=yes
{%- endif %}
passenv =
    *
{%- if cookiecutter.test_matrix_separate_coverage == 'yes' %}
usedevelop =
    cover: true
    nocov: false
{%- else %}
usedevelop = false
{%- endif %}
deps =
{%- if cookiecutter.test_runner == "pytest" %}
    pytest
    {%- if cookiecutter.travis == 'yes' %}
    pytest-travis-fold
    {%- endif %}
    {% if cookiecutter.test_matrix_separate_coverage == 'yes' %}cover: {% endif %}pytest-cov
{%- else %}
    nose
    {% if cookiecutter.test_matrix_separate_coverage == 'yes' %}cover: {% endif %}coverage
{%- endif %}
{%- if cookiecutter.c_extension_support == 'cython' %}
    Cython
{%- endif %}
commands =
{%- if cookiecutter.c_extension_support != 'no' %}
    {%- if cookiecutter.test_matrix_separate_coverage == 'yes' %}
    cover: python setup.py clean --all build_ext --force --inplace
    {%- endif %}
{%- endif %}
{%- if cookiecutter.test_runner == "pytest" %}
    {%- if cookiecutter.test_matrix_separate_coverage == 'yes' %}
    nocov: {posargs:python -m pytest -vv --ignore=src}
    cover: {posargs:python -m pytest --cov --cov-report=term-missing -vv}
    {%- else %}
    {posargs:python -m pytest --cov --cov-report=term-missing -vv {% if cookiecutter.allow_tests_inside_package == "no" %}tests{% endif %}}
    {%- endif %}
{%- else %}
    {%- if cookiecutter.test_matrix_separate_coverage == 'yes' %}
    nocov: {posargs:nosetests -v tests}
    cover: {posargs:nosetests --with-coverage --cover-package={{ cookiecutter.package_name }}}
    {%- else %}
    {posargs:nosetests --with-coverage --cover-package={{ cookiecutter.package_name}} tests}
    {%- endif %}
{%- endif %}

[testenv:check]
deps =
    docutils
{%- if cookiecutter.setup_py_uses_setuptools_scm == 'no' %}
    check-manifest
{%- endif %}
{%- if cookiecutter.linter == "flake8" %}
    flake8
{%- else %}
    pylama
{%- endif %}
    readme-renderer
    pygments
    isort
{%- if cookiecutter.setup_py_uses_setuptools_scm == 'yes' %}
    setuptools-scm
{%- endif %}
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
{%- if cookiecutter.setup_py_uses_setuptools_scm == 'no' %}
    check-manifest {toxinidir}
{%- endif %}
{%- if cookiecutter.linter == "flake8" %}
    flake8
{%- else %}
    pylama
{%- endif %}
    isort --verbose --check-only --diff --filter-files .
{%- if cookiecutter.c_extension_support == 'cython' %}

[testenv:cythonize]
basepython = {env:TOXPYTHON:python}
deps =
    Cython
skip_install = true
commands =
    {posargs:python setup.py clean --all build_ext --force}
{%- endif %}
{%- if cookiecutter.sphinx_docs == "yes" %}

[testenv:docs]
usedevelop = true
{%- if cookiecutter.setup_py_uses_setuptools_scm == 'yes' %}
install_command =
    python -m pip install --no-use-pep517 {opts} {packages}
{%- endif %}
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
{%- if cookiecutter.sphinx_doctest == "yes" %}
    python -m sphinx {posargs:-E} -b doctest docs dist/docs
{%- endif %}
    python -m sphinx {posargs:-E} -b html docs dist/docs
    python -m sphinx -b linkcheck docs dist/docs
# Using python -m sphinx instead of sphinx-build allows us to use --sitepackages if we want.
# See https://tox.readthedocs.io/en/latest/config.html#conf-sitepackages
{%- endif %}
{%- if cookiecutter.coveralls == 'yes' %}

[testenv:coveralls]
deps =
    coveralls
{%- if cookiecutter.c_extension_support == 'cython' %}
    Cython
{%- endif %}
skip_install = true
commands =
    coveralls{%- if cookiecutter.c_extension_support != "no" %} {env:COVERALLS_EXTRAS:--merge=extension-coveralls.json}{% endif %} []
{%- if cookiecutter.c_extension_support != "no" %}

[testenv:extension-coveralls]
deps =
    cpp-coveralls
skip_install = true
commands =
    coveralls --build-root=. --include=src --dump=extension-coveralls.json []
{%- endif %}
{%- endif %}
{%- if cookiecutter.codecov == 'yes' %}

[testenv:codecov]
deps =
    codecov
{%- if cookiecutter.c_extension_support == 'cython' %}
    Cython
{%- endif %}
skip_install = true
commands =
    codecov {%- if cookiecutter.c_extension_support == 'yes' %} --gcov-root=.{% endif %} []
{%- endif %}

[testenv:report]
deps =
    coverage
{%- if cookiecutter.c_extension_support == 'cython' %}
    Cython
{%- endif %}
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps =
    coverage
{%- if cookiecutter.c_extension_support == 'cython' %}
    Cython
{%- endif %}
{%- endif %}
